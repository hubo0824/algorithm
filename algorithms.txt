############################################################
This is a file to save my notes in data science.
Mainly include data minging and machine learning algotithms
Hope I can learn data science sucessfully
I want to be a man just like Andrew Ng.
###########################################################

2015.11.18 Git
Git是一个版本控制工具，需要控制的信息可以保存在本地和Github上，因此区分为两种不同的保存。
构建本体的Git版本库的方法是：
	1.在本地构建一个文件夹
	2.在git中采用 git init 命令将本文件夹设置为git版本库
	3.如果有文件放入该文件夹后，采用 git add 文件名字（需要后缀） 将文件纳入git版本控制之中
	4.编辑完成之后，采用 git commit -m "修改信息"  将文件修改信息进行提交
注意：每次完成修改的时候，都需要在git中完成第3,4步操作才算是真正的将文件进行了修改和添加。即 git add 与 git commit -m 是链接在一起的命令先后执行，不可分割。

命令2：当前现状和更改问题  （主要命令： git status | git diff）
	在不了解git现在的状态的话，采用 git status 查看当前git库中的信息。
	如果有修改的话，采用 git diff 命令查看修改的内容。
	
	
命令3：各种版本的控制和版本回退  （主要命令 ： git log | git reset --hard 版本号（HEAD^ 或者编号）| git reflog）
	当前存在的版本永远被定义为HEAD 往后回退的话加上相应个数的^  如果有太多个就加上~num
	查看往期的提交版本信息 采用命令 git log 
	让显示的信息比较好看   采用命令 git log --pretty=online
	由此可以看到往期提交的文件的不同版本
	
	如果需要回退到某个版本中， 采用命令 git reset --hard 版本号（HEAD^）
	如果需要查看往期的命令信息（在关闭后重新打开的git中） 采用命令 git reflog

	